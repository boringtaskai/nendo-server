# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "nendo_server/tests",
    "nendo_server/static"
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[lint]
select = [
    "A",
    # "ANN", # flake8-annotations
    "ARG",
    "B",
    "BLE",
    "C",
    "C4",
    "COM",
    #"D",
    "DTZ",
    "E",
    "ERA",
    "EXE",
    "F",
    # "FBT", # flake8-boolean-trap
    "G",
    "I", # Isort
    "ICN",
    "INP",
    "ISC",
    "N",
    "PGH",
    "PIE",
    "PL",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    # "PT", # flake8-pytest-style
    "PYI",
    "Q",
    "RUF",
    "RSE",
    "RET",
    "S",
    "SIM",
    "SLF",
    "T",
    "T10",
    "T20",
    "TCH",
    "TID",
    # "TRY", # tryceratops
    # "UP", # pyupgrade
    "W",
    "YTT",
]
ignore = [
  "A001",  # Variable is shadowing a Python builtin
  "ANN101",  # Missing type annotation for self
  "ANN102",  # Missing type annotation for cls
  "ANN204",  # Missing return type annotation for special method __str__
  "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
  "ARG005",  # Unused lambda argument
  "ARG001",  # Unused function argument
  "ARG002",  # Unused function argument
  "B008", # Do not perform function call `Depends` in argument defaults
  "BLE001", # Do not catch blind exception
  "C901",  # Too complex
  "D",    # all documentation
  #"D105",  # Missing docstring in magic method
  "D417",  # Missing argument description in the docstring
  "E501",  # Line too long
  "ERA001",  # Commented out code
  "G004",  # Logging statement uses f-string
  "PLR2004", # comparison with constants
  "PLR0911",  # Too many return statements
  "PLR0912",  # Too many branches
  "PLR0913",  # Too many arguments to function call
  "PLR0915",  # Too many statements
  "SLF001", # Private member accessed
  "S108", # unsafe /tmp use
  "S202", # unsafe tarfile.extractall()
  "S602", # unsafe subprocess call
  "TRY003",  # Avoid specifying long messages outside the exception class
]
fixable = ["ALL"]
unfixable = ["B", "Q000"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
